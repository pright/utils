#! /bin/sh

# generate tag file for lookupfile plugin
#echo -e "!_TAG_FILE_SORTED\t2\t/2=foldcase/" > filenametags
#find . -regex '.*\.\(c\|h\|cpp\|hpp\|cxx\|hxx\)' -type f -printf "%f\t%p\t1\n" | \
    #sort -f >> filenametags 

# generate ctags.files and cscope.files
AG=$(which ag)
AG_VER=${AG:+$(ag -V | sed -n '/version/p' | cut -d' ' -f3 | cut -d'.' -f1)}
if [ -n "${AG}" ] && [ "${AG_VER}" -ge 1 ]; then
    ${AG} --asm --cc --cpp --java --python -f -g . | xargs readlink -f | sort -f > ctags.files
else
    find . -regex '.*\.\(S\|c\|h\|cpp\|hpp\|cxx\|hxx\|java\|py\)' -not -path './.git*' -not -path './.svn*' \( -type f -or -type l \) -printf "%p\n" | xargs readlink -f | sort -f > ctags.files
fi
sed -e 's/^/"/g' -e 's/$/"/g' ctags.files > cscope.files

#cscope -Rbq
cscope -bkq -i cscope.files

# generate cctree.out for CCTree
#ccglue -S cscope.out -o cctree.out

ctags -I "__attribute__ __attribute_deprecated__ __attribute_format_arg__" \
    -I "__attribute_format_strfmon__, __attribute_malloc__, __attribute_noinline__" \
    -I "__attribute_const__, __attribute_pure__, __attribute_used__" \
    -I "__attribute_warn_unused_result__, __wur, __THROW, __THROWNL, __nonnull+" \
    --c++-kinds=+p --fields=+iaS --extra=+q -L ctags.files

